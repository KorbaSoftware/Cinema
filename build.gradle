group = 'pl.korbasoftware'
version = '0.0.1-SNAPSHOT'

ext.set("rootBuildDir", buildDir)

subprojects {
	apply plugin: 'idea'
	apply plugin: 'kotlin'
	apply plugin: 'kotlin-spring'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

    ext.mainClass = 'cinema.Cinema' + name.capitalize()
    buildDir = rootBuildDir.path + File.separator + name
    bootJar.enabled = false
    jar.enabled = true

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	ext {
		kotlin = '1.2.30'
		springBoot = '2.0.0.RELEASE'
	}

	dependencies {
		compile 'org.springframework.boot:spring-boot-starter'
		compile 'org.springframework.boot:spring-boot-starter-web'
		compile 'org.springframework.boot:spring-boot-starter-jetty'

		compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
		compile 'org.jetbrains.kotlin:kotlin-reflect'

		testCompile 'org.springframework.boot:spring-boot-starter-test'
	}

	configurations {
		compile.exclude module: 'spring-boot-starter-tomcat'
		compile.exclude group: 'org.apache.tomcat'
	}

	repositories {
		mavenCentral()
	}

	sourceSets {
		main {
			kotlin { srcDirs = ['kotlin'] }
			resources { srcDirs = ['resources'] }
		}

		test {
			kotlin { srcDirs = ['test'] }
			resources { srcDirs = ['testResources'] }
		}
	}

	compileKotlin {
		kotlinOptions { jvmTarget = "1.8" }
	}

	compileTestKotlin {
		kotlinOptions { jvmTarget = "1.8" }
	}

	buildscript {
		repositories {
			mavenCentral()
		}

		dependencies {
			classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBoot}")
			classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin}")
			classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin}")
		}
	}
}

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:+")
		classpath("org.jetbrains.kotlin:kotlin-allopen:+")
	}
}
